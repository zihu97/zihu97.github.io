import{_ as r,W as l,X as c,Z as n,$ as s,a0 as e,a1 as d,a2 as t,C as i}from"./framework-3a0c4e99.js";const u={},p={id:"使用minikube搭建k8s环境",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#使用minikube搭建k8s环境","aria-hidden":"true"},"#",-1),m={href:"https://minikube.sigs.k8s.io/docs/",target:"_blank",rel:"noopener noreferrer"},b={id:"_1-minikube-start",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#_1-minikube-start","aria-hidden":"true"},"#",-1),v={href:"https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"_1-1-prerequisites",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-prerequisites","aria-hidden":"true"},"#"),s(" 1.1 Prerequisites")],-1),_=t(`<h3 id="_1-2-installation" tabindex="-1"><a class="header-anchor" href="#_1-2-installation" aria-hidden="true">#</a> 1.2 Installation</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-LO</span> https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
<span class="token function">sudo</span> <span class="token function">install</span> minikube-linux-amd64 /usr/local/bin/minikube <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> minikube-linux-amd64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-version" tabindex="-1"><a class="header-anchor" href="#_1-3-version" aria-hidden="true">#</a> 1.3 Version</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@ubuntu5:/home/ubuntu<span class="token comment"># minikube version</span>
minikube version: v1.33.1
commit: 5883c09216182566a63dff4c326a6fc9ed2982ff
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-start-cluster" tabindex="-1"><a class="header-anchor" href="#_1-4-start-cluster" aria-hidden="true">#</a> 1.4 Start cluster</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>minikube start --vm-driver<span class="token operator">=</span>docker --base-image<span class="token operator">=</span><span class="token string">&quot;anjone/kicbase&quot;</span> --image-mirror-country<span class="token operator">=</span><span class="token string">&#39;cn&#39;</span> --image-repository<span class="token operator">=</span><span class="token string">&#39;registry.cn-hangzhou.aliyuncs.com/google_containers&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),f={id:"_2-install-and-set-up-kubectl-on-linux",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#_2-install-and-set-up-kubectl-on-linux","aria-hidden":"true"},"#",-1),q={href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/",target:"_blank",rel:"noopener noreferrer"},w=t(`<h3 id="_2-1-install-using-other-package-management" tabindex="-1"><a class="header-anchor" href="#_2-1-install-using-other-package-management" aria-hidden="true">#</a> 2.1 Install using other package management</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ubuntu@ubuntu5:~$ <span class="token function">sudo</span> snap <span class="token function">install</span> kubectl <span class="token parameter variable">--classic</span>
kubectl <span class="token number">1.30</span>.4 from Canonical✓ installed
ubuntu@ubuntu5:~$ kubectl version <span class="token parameter variable">--client</span>
Client Version: v1.30.4
Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-过程踩到的坑" tabindex="-1"><a class="header-anchor" href="#_4-过程踩到的坑" aria-hidden="true">#</a> 4 过程踩到的坑</h1><h2 id="_4-1-root用户拉起cluster失败" tabindex="-1"><a class="header-anchor" href="#_4-1-root用户拉起cluster失败" aria-hidden="true">#</a> 4.1 root用户拉起cluster失败</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@ubuntu5:/home/ubuntu<span class="token comment"># minikube start</span>
😄  minikube v1.33.1 on Ubuntu <span class="token number">24.04</span> <span class="token punctuation">(</span>vbox/amd64<span class="token punctuation">)</span>
✨  Automatically selected the <span class="token function">docker</span> driver. Other choices: none, <span class="token function">ssh</span>
🛑  The <span class="token string">&quot;docker&quot;</span> driver should not be used with root privileges. If you wish to <span class="token builtin class-name">continue</span> as root, use --force.
💡  If you are running minikube within a VM, consider using <span class="token parameter variable">--driver</span><span class="token operator">=</span>none:
📘    https://minikube.sigs.k8s.io/docs/reference/drivers/none/

❌  Exiting due to DRV_AS_ROOT: The <span class="token string">&quot;docker&quot;</span> driver should not be used with root privileges.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不能在root用户下执行</p><h2 id="_4-2-普通用户找不到docker" tabindex="-1"><a class="header-anchor" href="#_4-2-普通用户找不到docker" aria-hidden="true">#</a> 4.2 普通用户找不到docker</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ubuntu@ubuntu5:~$ minikube start
😄  minikube v1.33.1 on Ubuntu <span class="token number">24.04</span> <span class="token punctuation">(</span>vbox/amd64<span class="token punctuation">)</span>
👎  Unable to pick a default driver. Here is what was considered, <span class="token keyword">in</span> preference order:
    ▪ docker: Not healthy: <span class="token string">&quot;docker version --format {{.Server.Os}}-{{.Server.Version}}:{{.Server.Platform.Name}}&quot;</span> <span class="token builtin class-name">exit</span> status <span class="token number">1</span>: permission denied <span class="token keyword">while</span> trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get <span class="token string">&quot;http://%2Fvar%2Frun%2Fdocker.sock/v1.46/version&quot;</span><span class="token builtin class-name">:</span> dial unix /var/run/docker.sock: connect: permission denied
    ▪ docker: Suggestion: Add your user to the <span class="token string">&#39;docker&#39;</span> group: <span class="token string">&#39;sudo usermod -aG docker $USER &amp;&amp; newgrp docker&#39;</span> <span class="token operator">&lt;</span>https://docs.docker.com/engine/install/linux-postinstall/<span class="token operator">&gt;</span>
💡  Alternatively you could <span class="token function">install</span> one of these drivers:
    ▪ kvm2: Not installed: exec: <span class="token string">&quot;virsh&quot;</span><span class="token builtin class-name">:</span> executable <span class="token function">file</span> not found <span class="token keyword">in</span> <span class="token environment constant">$PATH</span>
    ▪ podman: Not installed: exec: <span class="token string">&quot;podman&quot;</span><span class="token builtin class-name">:</span> executable <span class="token function">file</span> not found <span class="token keyword">in</span> <span class="token environment constant">$PATH</span>
    ▪ qemu2: Not installed: <span class="token function">stat</span> /usr/share/OVMF/OVMF_CODE.fd: no such <span class="token function">file</span> or directory
    ▪ virtualbox: Not installed: unable to <span class="token function">find</span> VBoxManage <span class="token keyword">in</span> <span class="token environment constant">$PATH</span>

❌  Exiting due to DRV_NOT_HEALTHY: Found driver<span class="token punctuation">(</span>s<span class="token punctuation">)</span> but none were healthy. See above <span class="token keyword">for</span> suggestions how to fix installed drivers.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要将当前用户加入docker属组</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> ubuntu <span class="token operator">&amp;&amp;</span> newgrp <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4-3-minikube找不到docker-machine" tabindex="-1"><a class="header-anchor" href="#_4-3-minikube找不到docker-machine" aria-hidden="true">#</a> 4.3 minikube找不到docker machine</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ubuntu@ubuntu5:~$ minikube start
😄  minikube v1.33.1 on Ubuntu <span class="token number">24.04</span> <span class="token punctuation">(</span>vbox/amd64<span class="token punctuation">)</span>
E0825 <span class="token number">17</span>:30:06.513595    <span class="token number">8301</span> start.go:812<span class="token punctuation">]</span> api.Load failed <span class="token keyword">for</span> minikube: filestore <span class="token string">&quot;minikube&quot;</span><span class="token builtin class-name">:</span> Docker machine <span class="token string">&quot;minikube&quot;</span> does not exist. Use <span class="token string">&quot;docker-machine ls&quot;</span> to list machines. Use <span class="token string">&quot;docker-machine create&quot;</span> to <span class="token function">add</span> a new one.
✨  Using the <span class="token function">docker</span> driver based on existing profile
👍  Starting <span class="token string">&quot;minikube&quot;</span> primary control-plane <span class="token function">node</span> <span class="token keyword">in</span> <span class="token string">&quot;minikube&quot;</span> cluster
🚜  Pulling base image v0.0.44 <span class="token punctuation">..</span>.
    <span class="token operator">&gt;</span> index.docker.io/kicbase/sta<span class="token punctuation">..</span>.:  <span class="token number">0</span> B <span class="token punctuation">[</span>_______________________<span class="token punctuation">]</span> ?% ? p/s ?^C
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为之前执行了--image-mirror-country=cn中断了导致配置有问题，因此删除重配</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>minikube stop
minikube delete
minikube start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function y(V,S){const a=i("ExternalLinkIcon"),o=i("RouterLink");return l(),c("div",null,[n("h1",p,[k,s(" 使用"),n("a",m,[s("minikube"),e(a)]),s("搭建K8S环境")]),n("h2",b,[h,s(" 1 "),n("a",v,[s("minikube start"),e(a)])]),g,n("p",null,[s("Container or virtual machine manager, such as: "),e(o,{to:"/posts/container/build%20with%20harbor.html"},{default:d(()=>[s("Docker")]),_:1}),s(", QEMU, Hyperkit, Hyper-V, KVM, Parallels, Podman, VirtualBox, or VMware Fusion/Workstation")]),_,n("h2",f,[x,s(" 2 "),n("a",q,[s("Install and Set Up kubectl on Linux"),e(a)])]),w])}const N=r(u,[["render",y],["__file","Kubernetes.html.vue"]]);export{N as default};
